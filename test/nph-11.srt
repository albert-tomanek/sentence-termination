1
00:00:00,000 --> 00:00:06,350
we had this idea of a machine having or a network card or a wifi card having a "mac" address

2
00:00:06,350 --> 00:00:11,800
which I understand to be a unique address to that
dev... not necessarily that device

3
00:00:11,800 --> 00:00:22,750
but certainly to that network interface (that's probably the best word for it is it?) So, the question is why do we need IP addresses if we've got mac addresses?

4
00:00:22,750 --> 00:00:26,670
It's an interesting question, is because they do different things I'd say's probably the glib answer to it

5
00:00:28,660 --> 00:00:33,520
A MAC address looks something
like; six bytes, would be an ethernet mac address

6
00:00:33,520 --> 00:00:38,120
...there are some details about the
first few bits at the start of this, which

7
00:00:38,120 --> 00:00:43,120
can be used to indicate things like this is
multicast and broadcast couple of things

8
00:00:43,120 --> 00:00:46,989
and then you've essentially got: These
indicate the; well you can think of it as the

9
00:00:46,989 --> 00:00:53,110
manufacturer , so you apply to the
standards body I think it's the IEEE to get a block

10
00:00:53,110 --> 00:00:56,100
You pay them some money and you get a block and then you can mint your own mac addresses from that

11
00:00:56,100 --> 00:01:01,620
and then these would refer normally to the station on the network on the ethernet

12
00:01:01,620 --> 00:01:06,549
so that gives you a fairly big address space, you can address quite a lot
in six bytes. So it used to be the case

13
00:01:06,549 --> 00:01:11,100
that these were burnt into the hardware
of the ethernet card back in the day when

14
00:01:11,100 --> 00:01:15,080
it was all physical things with
physical wires, there'd be something on the card

15
00:01:15,080 --> 00:01:18,180
which had this hard, hard coded into in, in the hardware

16
00:01:18,180 --> 00:01:21,939
nowadays and I mean for several years

17
00:01:21,939 --> 00:01:26,229
particularly with WiFi it's been possible to set this through software in many cases so you can't

18
00:01:26,229 --> 00:01:31,090
in fact guarantee one-to-one mapping
between the network card, which is what it used to be

19
00:01:31,090 --> 00:01:35,119
what it identified and the mac address
for its you can change the mac address

20
00:01:35,119 --> 00:01:39,150
network card particularly in wifi - was one of the reasons why spoofing on wifi is so much

21
00:01:39,150 --> 00:01:47,770
is actually easy than people think. On the other hand an IP address is a four byte number in Hex that

22
00:01:47,770 --> 00:01:51,780
might be something like that. I'm not
gonna try & translate that to decimal in my head

23
00:01:51,780 --> 00:01:58,170
an example of a decimal one would be 10 dot zero dot zero dot one. So that's a dotted quad notation these

24
00:01:58,170 --> 00:02:03,640
are bytes, each of these goes from 0 to 255 - When you have Hollywood doing films the

25
00:02:03,640 --> 00:02:07,899
number of times that, erm CSI's a particular example of this as well, the number of

26
00:02:07,899 --> 00:02:11,890
times that people will do trace routes and other such things to IP addresses that

27
00:02:11,890 --> 00:02:17,930
start, you know, 700 and something and it's like, it's completely meaningless. [It's a bit like the Hollywood phone numbers: 555...]

28
00:02:18,060 --> 00:02:22,300
Yeah, Possibly - maybe it's been done deliberately I would like, it would be nice to think it was done deliberately so you've got these two

29
00:02:22,300 --> 00:02:26,240
different address formats and they're doing two different things so this used, would

30
00:02:26,240 --> 00:02:32,680
be used to identify the frames for you
on the ethernet that you were connect physically connected to

31
00:02:32,680 --> 00:02:36,100
so for example on the ethernet frame
this is why you start out with the

32
00:02:36,100 --> 00:02:39,820
destination address then you have the
source address and then you have the

33
00:02:39,820 --> 00:02:45,140
protocol fields and it's because the
first bits that hit the interface card

34
00:02:45,140 --> 00:02:48,350
should be the destination address cause
the card needs to make a decision.

35
00:02:48,350 --> 00:02:51,580
Should I receive this will not. Or should I just start ignoring it

36
00:02:51,580 --> 00:02:56,790
[So this is card sitting there on what is
effectively an open phone line...

37
00:02:56,790 --> 00:03:00,410
... and it has to know conversation is to do with...] Yeah, when you
go back to first versions of the ethernet

38
00:03:00,410 --> 00:03:06,209
you have Ethernet card sitting on an ethernet they'd have; they were called vampire taps

39
00:03:06,209 --> 00:03:09,780
coming off them (I think I was the first version of this) and then you have a much thicker

40
00:03:09,780 --> 00:03:14,459
cable connecting them and it was called a
vampire tap because literally you screwed it into

41
00:03:14,459 --> 00:03:17,890
the coax and it broke through the
sheath and hit the core in the middle and

42
00:03:17,890 --> 00:03:21,370
that was what connected the card to the cable
so you'd have multiple stations

43
00:03:21,370 --> 00:03:24,920
electrically connected to the same physical line and so there'd be signals passing up and down

44
00:03:24,920 --> 00:03:28,400
this line and each station needs to know should I listen to the signal or not. Do I need to start

45
00:03:28,400 --> 00:03:32,620
receiving it, turning it into bits, passing it 
up to the computer, into the memory etceteras.

46
00:03:32,620 --> 00:03:35,340
You wanna make that decision early as back in the day, things were expensive and things

47
00:03:35,340 --> 00:03:39,660
were slow so you put the destination bit
first and then the card can make a

48
00:03:39,660 --> 00:03:42,890
decision very early do I need to keep
listening and put this into memory or can i

49
00:03:42,890 --> 00:03:46,930
just ignore it and it kinda carries
through into technology today, even though it doesn't matter so much.

50
00:03:46,930 --> 00:03:50,900
If you look at an IP address then the first
fields, ah well actually, the first fields you

51
00:03:50,900 --> 00:03:56,130
get, you've got version, you've got header length and such like, but the first fields in address terms

52
00:03:56,130 --> 00:04:00,380
you get the source and destination interestingly - so it's the other way around because by the time you got to this

53
00:04:00,380 --> 00:04:03,170
stage is maybe a bit less important
and you're gonna have to do quite a lot more

54
00:04:03,170 --> 00:04:07,049
thinking anyway about the thing about
the packet coming in so you don't need

55
00:04:07,049 --> 00:04:09,910
to make this very fast decision to
decide to ignore it

56
00:04:09,910 --> 00:04:13,299
the other thing about IP addresses is
so ethernet starts out with the idea

57
00:04:13,299 --> 00:04:17,340
that you've got a bunch of stations
attached to a particular cable IP is

58
00:04:17,340 --> 00:04:21,410
with the idea that you got multiple
networks with different things in them

59
00:04:21,410 --> 00:04:26,280
may be different technologies and you
want to start inter-connecting between

60
00:04:26,280 --> 00:04:30,580
these networks so it's a much bigger
thing to start with you're trying to build a

61
00:04:30,580 --> 00:04:33,460
much bigger network than you're thinking
about when you're building an ethernet where you've got

62
00:04:33,460 --> 00:04:38,070
generally things quite local this is known as a
local area network a LAN

63
00:04:38,070 --> 00:04:41,140
Nowadays you'd think of different sizes of this, you might think of a Metropolitan Area Network

64
00:04:41,140 --> 00:04:46,000
or a MAN, you might think of a wide area
network or a WAN but yeah it's a much bigger network.

65
00:04:46,000 --> 00:04:50,360
and so you got a lot more information in
some sense to encode if you try using

66
00:04:50,360 --> 00:04:55,520
MAC addresses they have no structure other than this manufacturer, 'n this station ID and so if

67
00:04:55,800 --> 00:04:59,360
you want to look up what to do when
you've got a ethernet frame that's arrived

68
00:04:59,370 --> 00:05:03,460
and what you, where you should send it
you just need a big table of everything

69
00:05:03,470 --> 00:05:09,390
which on the internet is completely
infeasible - you've got no structure. With an IP address

70
00:05:09,390 --> 00:05:10,630
you can do

71
00:05:10,630 --> 00:05:14,680
prefix matching so you can represent
blocks of IP addresses with a single

72
00:05:14,680 --> 00:05:18,550
entry so you no longer have to have a
table with two to the 32 - about four

73
00:05:18,550 --> 00:05:23,390
billion entries in it to make a decision what to do - you match it against the

74
00:05:23,390 --> 00:05:28,420
entries that you've got, which cover ranges and so because it's got more structure embedded in it, you can

75
00:05:28,420 --> 00:05:31,600
sort of compress that information & you can make that look up process quicker and you

76
00:05:31,600 --> 00:05:37,190
can help it to scale out and that's why
ipv4 has this ability to do this global

77
00:05:37,190 --> 00:05:41,080
network where is it will be quite
difficult to run a really global ethernet just

78
00:05:41,080 --> 00:05:45,190
relying on standard ethernet style protocol do that. Wouldn't work so well and that's why then

79
00:05:45,190 --> 00:05:50,200
IPv6 then has, one of the reasons it's got this bigger address space - so it's got 128 bits per address rather than

80
00:05:50,200 --> 00:05:56,100
32bits per address. Gives you more addresses but then you have this ability because they're

81
00:05:56,100 --> 00:05:59,220
structured; the possibility to compress
them down, so you don't have to have

82
00:05:59,220 --> 00:06:06,660
two to the 128 entries in each IPv6 router, 'cause, that's a lot. [So the IP address is a bit more like a street address...

83
00:06:06,660 --> 00:06:13,190
OK, you can break it down into city, street, number. Wheras a MAC address might be more like the phone...

84
00:06:13,190 --> 00:06:16,770
number for that house. It would be hard to find that house from the phone number, & therefore having

85
00:06:16,770 --> 00:06:23,669
a huge list of phone numbers is really not useful?] Yeah. The analogy's not that far away, I
think,  & certainly the idea that you got

86
00:06:23,669 --> 00:06:27,930
structure in the address and structure
that allows you to compress the entries

87
00:06:27,930 --> 00:06:33,370
allows you to make decisions from far
away as well so, so commonly in an IP

88
00:06:33,370 --> 00:06:37,229
network some of these routers will have
a complete table so they have, I think

89
00:06:37,229 --> 00:06:42,349
currently we're running at about something over 500,000 entries in our table even given

90
00:06:42,349 --> 00:06:45,449
the fact you can compress these down &
express ranges rather than having to

91
00:06:45,449 --> 00:06:48,870
express each address individually but some of these routers, particularly if they're

92
00:06:48,870 --> 00:06:53,750
routers in the middle of a network, may not, for whatever reason, erm so they may have default routes

93
00:06:53,750 --> 00:06:57,780
for example, so that may be the case
that you've got two hundred thousand

94
00:06:57,780 --> 00:07:02,970
entries and then you've got one entry which covers everything else, and so that's the default route. If you're on a smaller network

95
00:07:02,970 --> 00:07:07,530
that's connected to a much bigger
backbone network quite commonly you'll end

96
00:07:07,530 --> 00:07:10,880
up with you got some addresses for the
things that are inside your network and

97
00:07:10,880 --> 00:07:14,849
the things your customers connected
directly to you then you might have a

98
00:07:14,849 --> 00:07:18,960
default route which says everything else
that's not want your own customers goes

99
00:07:18,960 --> 00:07:22,259
up to whover provides you with service and so you can sometimes have interesting cases

100
00:07:22,259 --> 00:07:27,090
where if for example this smaller network
is multi homed as they call it. So it's

101
00:07:27,090 --> 00:07:31,090
connected to multiple bigger networks and a mistake happens in the configuration you

102
00:07:31,090 --> 00:07:35,090
end up being used as a through route for
some reason and this is then, well it's not

103
00:07:35,090 --> 00:07:37,750
good for you because you're now carrying
probably a lot more traffic than you can

104
00:07:37,750 --> 00:07:41,930
cope with and it's not good for anybody
else who's connecting to these two large

105
00:07:41,930 --> 00:07:44,759
networks because now their traffic is
taking this completely unnecessary hop

106
00:07:44,759 --> 00:07:47,569
going further than it needs to taking longer than it needs to get there, perhaps going through a

107
00:07:47,640 --> 00:07:51,800
bottleneck getting slowed down to get there so it's generally it's a bad thing

108
00:07:52,080 --> 00:07:56,200
[Sat Nav sending HGVs through a...] Exactly, yeah and if you make

109
00:07:56,210 --> 00:08:02,819
a mistake that route suddenly becomes visible to the Sat Nav and suddenly all the HGVs go ah, it's really fast to go that way

110
00:08:02,819 --> 00:08:09,419
It looks like it should be really fast to go that way. In practice it won't be because now they're all piled in.

111
00:08:09,840 --> 00:08:14,599
So what have I done, I've done a sorting of the data and the approach I've done is something based on similarity measures.

112
00:08:14,599 --> 00:08:18,949
Document four has 18 "my"s and
five "horse"s and document five is only

113
00:08:18,949 --> 00:08:21,560
about the word "my" not about horses and so the first thing you would do....

